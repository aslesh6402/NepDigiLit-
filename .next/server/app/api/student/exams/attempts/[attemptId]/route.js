"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/student/exams/attempts/[attemptId]/route";
exports.ids = ["app/api/student/exams/attempts/[attemptId]/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute&page=%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute.ts&appDir=C%3A%5CUsers%5Cpc%5CDownloads%5Cproject%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpc%5CDownloads%5Cproject%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute&page=%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute.ts&appDir=C%3A%5CUsers%5Cpc%5CDownloads%5Cproject%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpc%5CDownloads%5Cproject%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_pc_Downloads_project_project_src_app_api_student_exams_attempts_attemptId_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/student/exams/attempts/[attemptId]/route.ts */ \"(rsc)/./src/app/api/student/exams/attempts/[attemptId]/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/student/exams/attempts/[attemptId]/route\",\n        pathname: \"/api/student/exams/attempts/[attemptId]\",\n        filename: \"route\",\n        bundlePath: \"app/api/student/exams/attempts/[attemptId]/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\pc\\\\Downloads\\\\project\\\\project\\\\src\\\\app\\\\api\\\\student\\\\exams\\\\attempts\\\\[attemptId]\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_pc_Downloads_project_project_src_app_api_student_exams_attempts_attemptId_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/student/exams/attempts/[attemptId]/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzdHVkZW50JTJGZXhhbXMlMkZhdHRlbXB0cyUyRiU1QmF0dGVtcHRJZCU1RCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGc3R1ZGVudCUyRmV4YW1zJTJGYXR0ZW1wdHMlMkYlNUJhdHRlbXB0SWQlNUQlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZzdHVkZW50JTJGZXhhbXMlMkZhdHRlbXB0cyUyRiU1QmF0dGVtcHRJZCU1RCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNwYyU1Q0Rvd25sb2FkcyU1Q3Byb2plY3QlNUNwcm9qZWN0JTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNwYyU1Q0Rvd25sb2FkcyU1Q3Byb2plY3QlNUNwcm9qZWN0JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMwRDtBQUN2STtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2RpZ2l0YWwtbGl0ZXJhY3ktcG9ydGFsLz9iNTRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXHBjXFxcXERvd25sb2Fkc1xcXFxwcm9qZWN0XFxcXHByb2plY3RcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcc3R1ZGVudFxcXFxleGFtc1xcXFxhdHRlbXB0c1xcXFxbYXR0ZW1wdElkXVxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc3R1ZGVudC9leGFtcy9hdHRlbXB0cy9bYXR0ZW1wdElkXS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3N0dWRlbnQvZXhhbXMvYXR0ZW1wdHMvW2F0dGVtcHRJZF1cIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3N0dWRlbnQvZXhhbXMvYXR0ZW1wdHMvW2F0dGVtcHRJZF0vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxwY1xcXFxEb3dubG9hZHNcXFxccHJvamVjdFxcXFxwcm9qZWN0XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHN0dWRlbnRcXFxcZXhhbXNcXFxcYXR0ZW1wdHNcXFxcW2F0dGVtcHRJZF1cXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3N0dWRlbnQvZXhhbXMvYXR0ZW1wdHMvW2F0dGVtcHRJZF0vcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute&page=%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute.ts&appDir=C%3A%5CUsers%5Cpc%5CDownloads%5Cproject%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpc%5CDownloads%5Cproject%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/student/exams/attempts/[attemptId]/route.ts":
/*!*****************************************************************!*\
  !*** ./src/app/api/student/exams/attempts/[attemptId]/route.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n\n\n// POST /api/student/exams/attempts/[attemptId] - Track cheating activities during exam\nasync function POST(request, { params }) {\n    try {\n        const body = await request.json();\n        const { eventType, timestamp, details } = body;\n        const attemptId = params.attemptId;\n        if (!attemptId || !eventType) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Attempt ID and event type are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Get the exam attempt\n        const attempt = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.examAttempt.findUnique({\n            where: {\n                id: attemptId\n            },\n            include: {\n                exam: true\n            }\n        });\n        if (!attempt || attempt.status !== \"IN_PROGRESS\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid or completed exam attempt\"\n            }, {\n                status: 400\n            });\n        }\n        // Process different types of tracking events\n        let updateData = {};\n        let riskIncrease = 0;\n        let shouldFlag = false;\n        switch(eventType){\n            case \"TAB_SWITCH\":\n                updateData.tabSwitches = {\n                    increment: 1\n                };\n                updateData.tabSwitchTimes = {\n                    push: new Date().toISOString()\n                };\n                riskIncrease = 10;\n                if (!attempt.exam.allowTabSwitch) {\n                    shouldFlag = true;\n                    riskIncrease = 25;\n                } else if (attempt.tabSwitches >= attempt.exam.maxTabSwitches) {\n                    shouldFlag = true;\n                    riskIncrease = 30;\n                }\n                break;\n            case \"MOUSE_LEFT_WINDOW\":\n                updateData.mouseLeftCount = {\n                    increment: 1\n                };\n                riskIncrease = 5;\n                break;\n            case \"FULLSCREEN_EXIT\":\n                updateData.fullScreenExits = {\n                    increment: 1\n                };\n                riskIncrease = 15;\n                if (attempt.exam.fullScreenRequired) {\n                    shouldFlag = true;\n                    riskIncrease = 25;\n                }\n                break;\n            case \"RIGHT_CLICK\":\n                updateData.rightClicks = {\n                    increment: 1\n                };\n                riskIncrease = 3;\n                break;\n            case \"COPY_PASTE\":\n                updateData.copyPasteEvents = {\n                    increment: 1\n                };\n                riskIncrease = 20;\n                shouldFlag = true;\n                break;\n            case \"SUSPICIOUS_KEYBOARD\":\n                updateData.keyboardEvents = {\n                    push: {\n                        timestamp: new Date().toISOString(),\n                        details\n                    }\n                };\n                riskIncrease = 15;\n                break;\n            case \"DEVELOPER_TOOLS\":\n                riskIncrease = 50;\n                shouldFlag = true;\n                break;\n            default:\n                riskIncrease = 5;\n        }\n        // Update risk score\n        updateData.riskScore = {\n            increment: riskIncrease\n        };\n        // Add to suspicious flags\n        updateData.suspiciousFlags = {\n            push: {\n                type: eventType,\n                timestamp: new Date().toISOString(),\n                details: details || {}\n            }\n        };\n        // Update the attempt\n        const updatedAttempt = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.examAttempt.update({\n            where: {\n                id: attemptId\n            },\n            data: updateData\n        });\n        // Create cheating incident if flagged\n        if (shouldFlag || updatedAttempt.riskScore + riskIncrease > 60) {\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.cheatingIncident.create({\n                data: {\n                    userId: attempt.userId,\n                    examAttemptId: attemptId,\n                    incidentType: eventType,\n                    description: `${eventType} detected during exam`,\n                    evidence: {\n                        eventType,\n                        timestamp,\n                        details,\n                        currentRiskScore: updatedAttempt.riskScore + riskIncrease\n                    },\n                    severity: updatedAttempt.riskScore + riskIncrease > 80 ? \"CRITICAL\" : \"HIGH\"\n                }\n            });\n        }\n        // Auto-terminate if risk score is too high\n        if (updatedAttempt.riskScore + riskIncrease > 90) {\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.examAttempt.update({\n                where: {\n                    id: attemptId\n                },\n                data: {\n                    status: \"FAILED\",\n                    endTime: new Date()\n                }\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                terminated: true,\n                message: \"Exam terminated due to suspicious activity\"\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            riskScore: updatedAttempt.riskScore + riskIncrease,\n            warning: riskIncrease > 15 ? \"Suspicious activity detected\" : null\n        });\n    } catch (error) {\n        console.error(\"Error tracking exam activity:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to track activity\"\n        }, {\n            status: 500\n        });\n    }\n}\n// PUT /api/student/exams/attempts/[attemptId] - Submit exam answers\nasync function PUT(request, { params }) {\n    try {\n        const body = await request.json();\n        const { answers, timeSpent } = body;\n        const attemptId = params.attemptId;\n        if (!attemptId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Attempt ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Get the exam attempt\n        const attempt = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.examAttempt.findUnique({\n            where: {\n                id: attemptId\n            },\n            include: {\n                exam: true\n            }\n        });\n        if (!attempt) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Exam attempt not found\"\n            }, {\n                status: 404\n            });\n        }\n        if (attempt.status !== \"IN_PROGRESS\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Exam attempt is not in progress\"\n            }, {\n                status: 400\n            });\n        }\n        // Calculate score\n        const exam = attempt.exam;\n        const questions = exam.questions;\n        let totalScore = 0;\n        let maxScore = 0;\n        // Check answers and calculate score\n        for(let i = 0; i < questions.length; i++){\n            const question = questions[i];\n            const studentAnswer = answers[i.toString()];\n            maxScore += question.marks;\n            if (studentAnswer === question.correctAnswer) {\n                totalScore += question.marks;\n            }\n        }\n        const percentageScore = Math.round(totalScore / maxScore * 100);\n        // Final risk assessment\n        let finalRiskScore = attempt.riskScore;\n        // Check time spent patterns\n        const expectedMinTime = exam.duration * 60 * 0.2; // Minimum 20% of exam duration\n        if (timeSpent < expectedMinTime) {\n            finalRiskScore += 25;\n        }\n        // Determine final status\n        let finalStatus = \"COMPLETED\";\n        if (finalRiskScore > 70) {\n            finalStatus = \"FLAGGED\";\n        }\n        // Update attempt with final results\n        const updatedAttempt = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.examAttempt.update({\n            where: {\n                id: attemptId\n            },\n            data: {\n                answers,\n                score: totalScore,\n                percentage: percentageScore,\n                timeSpent,\n                endTime: new Date(),\n                status: finalStatus,\n                riskScore: finalRiskScore,\n                isReviewed: false\n            }\n        });\n        // Create final cheating incident if flagged\n        if (finalStatus === \"FLAGGED\") {\n            await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.cheatingIncident.create({\n                data: {\n                    userId: attempt.userId,\n                    examAttemptId: attemptId,\n                    incidentType: \"DEVICE_MALFUNCTION\",\n                    description: `Exam flagged for review with risk score ${finalRiskScore}`,\n                    evidence: {\n                        finalRiskScore,\n                        timeSpent,\n                        tabSwitches: attempt.tabSwitches,\n                        suspiciousActivities: attempt.suspiciousFlags\n                    },\n                    severity: finalRiskScore > 85 ? \"CRITICAL\" : \"HIGH\"\n                }\n            });\n        }\n        // Return results (limited information for students)\n        const response = {\n            attempt: {\n                id: updatedAttempt.id,\n                status: updatedAttempt.status,\n                timeSpent,\n                submittedAt: updatedAttempt.endTime\n            }\n        };\n        // Only show score if exam allows it\n        if (exam.showResults) {\n            response.attempt.score = totalScore;\n            response.attempt.maxScore = maxScore;\n            response.attempt.percentage = percentageScore;\n            response.attempt.passed = totalScore >= exam.passingMarks;\n        } else {\n            response.message = \"Your exam has been submitted and will be reviewed by your teacher.\";\n        }\n        if (finalStatus === \"FLAGGED\") {\n            response.warning = \"Your exam has been flagged for review due to suspicious activity.\";\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response);\n    } catch (error) {\n        console.error(\"Error submitting exam:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to submit exam\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/student/exams/attempts/[attemptId]/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFFN0MsTUFBTUMsa0JBQWtCQztBQUlqQixNQUFNQyxTQUFTRixnQkFBZ0JFLE1BQU0sSUFBSSxJQUFJSCx3REFBWUEsR0FBRTtBQUVsRSxJQUFJSSxJQUF5QixFQUFjSCxnQkFBZ0JFLE1BQU0sR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaWdpdGFsLWxpdGVyYWN5LXBvcnRhbC8uL3NyYy9saWIvcHJpc21hLnRzPzAxZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5cbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbFRoaXMgYXMgdW5rbm93biBhcyB7XG4gIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkXG59XG5cbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID8/IG5ldyBQcmlzbWFDbGllbnQoKVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA9IHByaXNtYSJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute&page=%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstudent%2Fexams%2Fattempts%2F%5BattemptId%5D%2Froute.ts&appDir=C%3A%5CUsers%5Cpc%5CDownloads%5Cproject%5Cproject%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpc%5CDownloads%5Cproject%5Cproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();